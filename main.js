    // Array with dates outside of China fixed for testing purposes
    // This will come from the db
    const collectedDates = ["20160611", "20160612", "20160613", "20160614", "20160615", "20160616", "20160617","20160709", "20160710", "20160711", "20160712", "20160713", "20160714", "20160715", "20160716", "20160717", "20160718","20160731", "20160801", "20160802", "20160803", "20160804", "20160805", "20160806", "20160807", "20160808", "20160809", "20160810", "20160811", "20160812","20161119", "20161120", "20161121", "20161122", "20161123", "20161124", "20161125", "20161126", "20161127", "20161128", "20161129", "20161130", "20161201", "20161202", "20161203","20170108", "20170109", "20170110", "20170111", "20170112", "20170113", "20170114", "20170115", "20170116","20170326", "20170327", "20170328", "20170329", "20170330", "20170331", "20170401", "20170402", "20170403", "20170404", "20170405", "20170406", "20170407", "20170408", "20170409", "20170410","20170414", "20170415", "20170416","20170519", "20170520", "20170521", "20170522", "20170523", "20170524","20170729", "20170730", "20170731", "20170801", "20170802", "20170803", "20170804", "20170805", "20170806","20171019", "20171020", "20171021", "20171022", "20171023", "20171024", "20171025", "20171026", "20171027", "20171028", "20171029","20171104", "20171105", "20171106", "20171107", "20171108", "20171109", "20171110", "20171111", "20171112", "20171113", "20171114","20180224", "20180225", "20180226", "20180227", "20180228", "20180301", "20180302", "20180303", "20180304","20180610", "20180611", "20180612", "20180613", "20180614", "20180615", "20180616", "20180617", "20180618", "20180619", "20180620", "20180621", "20180622", "20180623", "20180624","20180329", "20180330", "20180331", "20180401", "20180402", "20180403", "20180404", "20180405","20180504", "20180505", "20180506", "20180507", "20180508", "20180509", "20180510", "20180511", "20180512", "20180513", "20180514", "20180515", "20180516","20180802", "20180803", "20180804", "20180805", "20180806", "20180807", "20180808", "20180809", "20180810", "20180811", "20180812", "20180813", "20180814", "20180815", "20180816", "20180817", "20180818","20180916", "20180917", "20180918", "20180919", "20180920", "20180921", "20180922", "20180923", "20180924", "20180925", "20180926", "20180927", "20180928","20180713", "20180714", "20180715","20181102", "20181103", "20181104", "20181105", "20181106", "20181107", "20181108", "20181109", "20181110", "20181111", "20181112", "20181113", "20181114", "20181115", "20181116", "20181117", "20181118","20190119", "20190120", "20190121", "20190122", "20190123", "20190124", "20190125", "20190126", "20190127", "20190128","20190213", "20190214", "20190215", "20190216", "20190217", "20190218", "20190219", "20190220", "20190221", "20190222", "20190223", "20190224","20190308", "20190309", "20190310", "20190311", "20190312", "20190313", "20190314", "20190315", "20190316", "20190317","20190421", "20190422", "20190423", "20190424", "20190425", "20190426", "20190427", "20190428", "20190429", "20190430", "20190501", "20190502", "20190503", "20190504", "20190505", "20190506","20190607", "20190608", "20190609", "20190610","20190524", "20190525", "20190526", "20190527","20190704", "20190705", "20190706", "20190707", "20190708", "20190709","20190731", "20190801", "20190802", "20190803", "20190804", "20190805", "20190806", "20190807", "20190808", "20190809", "20190810", "20190811", "20190812", "20190813", "20190814", "20190815", "20190816", "20190817", "20190818","20190820", "20190821", "20190822", "20190823", "20190824", "20190825","20191015", "20191016", "20191017", "20191018", "20191019", "20191020", "20191021", "20191022", "20191023", "20191024", "20191025", "20191026", "20191027", "20191028","20191113", "20191114", "20191115", "20191116", "20191117", "20191118","20200108", "20200109", "20200110", "20200111", "20200112", "20200113", "20200114", "20200115", "20200116", "20200117", "20200118", "20200119", "20200120", "20200121","20191219", "20191220", "20191221", "20191222", "20191223", "20191224", "20191225", "20191226", "20191227", "20191228", "20191229", "20191230", "20191231", "20200101", "20200102", "20200103","20200127", "20200128", "20200129", "20200130","20200304", "20200305", "20200306", "20200307", "20200308", "20200309", "20200310", "20200311", "20200312", "20200313", "20200314", "20200315", "20200316", "20200317", "20200318", "20200319", "20200320", "20200321", "20200322", "20200323", "20200324"];

    // remove duplicates from the Array
    const cleanedDates = [...new Set(collectedDates)];

    
    // Sorting the array to by date
    function sortDates(dates) {
        return dates.sort((a,b) => {
            return moment(a) - moment(b)
        });
    }
    // console.log(sortDates(notInSh));
    
    // Function to get an array of single dates between startDate and endDate    
    function getDates(startDate, stopDate) {
        var dateArray = [];
        var currentDate = moment(startDate);
        var stopDate = moment(stopDate);
        while (currentDate <= stopDate) {
            dateArray.push( moment(currentDate).format('YYYYMMDD') )
            currentDate = moment(currentDate).add(1, 'days');
        }
        return dateArray;
    }
    //This array can then be saved to a database
    // const singleDays = getDates("20200412", "20200418");
    
    // console.log(singleDays);

    let content = "";
    
    for (let i = 5; i > 0; i--) {
        let sortedDates = sortDates(cleanedDates);
        let startYear = moment().subtract(i, 'year');
        let endYear = moment(startYear).add(1, 'year');
        // calculate the number of days in the year we are looking at to calculate the number of days in China
        const daysInYear = endYear.diff(startYear, 'days');
        // counter to keep track of days outside of China
        let dayCounter = 0;
        content += `<h2>${ startYear.format("MMM-DD-YYYY") }  ->  ${ endYear.format("MMM-DD-YYYY") } (${ daysInYear } days) | `;
        sortedDates.forEach(function(date) {
            if (moment(date).isBetween(startYear,endYear)) {
                // content += `<p> ${ moment(date).format("MMM-DD-YYYY") } </p>`;
                dayCounter++;
            }
        });
        content += `<small> Not in China: ${ dayCounter } </small> | in China: ${ daysInYear - dayCounter }</h2>`;
    }
    
    $("#elapsed").html(content);